syntax = "proto3";
package v6.services.pub;
option go_package = "github.com/city404/v6-public-rpc-proto/go/v6/webdavconfig";
import "common/pub_common.proto";


service PubDavConfig {
    // rpc Create (DavConfig) returns (DavConfig) {}
    rpc Get (DavConfig) returns (DavConfig) {}
    rpc Update (DavConfig) returns (DavConfig) {}
    rpc Enable (DavConfig) returns (DavConfig) {}
    rpc Disable (DavConfig) returns (DavConfig) {}
    rpc ListAll (DavConfig) returns (DavConfigListResponse) {}
    rpc List (DavConfigListRequest) returns (DavConfigListResponse) {}
    rpc ValidateUserName (DavConfig) returns (.v6.services.pub.common.UserNameValidateResponse) {}
    rpc ServerInfo (DavConfig) returns (DavServerInfo) {}
    rpc Create (DavConfig) returns (DavServerInfo) {}
    rpc Delete (DavConfig) returns (DavServerInfo) {}
}


message DavConfig {
    string user_identity = 1;
    int32 enable_flag = 2;
    string root = 3;
    int32 write_flag = 4;
    int32 lock_flag = 5;
    int32 chunked_flag = 6;
    int32 path_style = 7;
    int32 status = 8;
    string prefix = 9;
    int32 code = 10;
    string message = 11;
    string username = 12;
    string password = 13;
    int64 update_ts = 14;
    string remark = 15;
}

message DavConfigListRequest {
    .v6.services.pub.common.ScanListRequest list_info = 1;
    string user_identity = 2;
}

message DavConfigListResponse {
    .v6.services.pub.common.ScanListRequest list_info = 1;
    repeated DavConfig configs = 2;
}

message DavServerInfo {
    string server_name = 1;
    string server_version = 2;
    string server_software = 4;
    string server_address = 5;
    string server_port = 6;
    string server_protocol = 7;
    string server_root = 8;
    bool server_ssl = 9;
    bool server_allow_write = 10;
}

/*
message UserNameValidateResponse {
    int32 code = 1;
    string message = 2;
    bool valid = 3;
}
*/