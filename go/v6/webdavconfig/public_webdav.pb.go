// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.0
// source: webdav/public_webdav.proto

package webdavconfig

import (
	common "github.com/city404/v6-public-rpc-proto/go/v6/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DavConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIdentity  string                 `protobuf:"bytes,1,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	EnableFlag    int32                  `protobuf:"varint,2,opt,name=enable_flag,json=enableFlag,proto3" json:"enable_flag,omitempty"`
	Root          string                 `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	WriteFlag     int32                  `protobuf:"varint,4,opt,name=write_flag,json=writeFlag,proto3" json:"write_flag,omitempty"`
	LockFlag      int32                  `protobuf:"varint,5,opt,name=lock_flag,json=lockFlag,proto3" json:"lock_flag,omitempty"`
	ChunkedFlag   int32                  `protobuf:"varint,6,opt,name=chunked_flag,json=chunkedFlag,proto3" json:"chunked_flag,omitempty"`
	PathStyle     int32                  `protobuf:"varint,7,opt,name=path_style,json=pathStyle,proto3" json:"path_style,omitempty"`
	Status        int32                  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Prefix        string                 `protobuf:"bytes,9,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Code          int32                  `protobuf:"varint,10,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	Username      string                 `protobuf:"bytes,12,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,13,opt,name=password,proto3" json:"password,omitempty"`
	UpdateTs      int64                  `protobuf:"varint,14,opt,name=update_ts,json=updateTs,proto3" json:"update_ts,omitempty"`
	Remark        string                 `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`
	LastAccessTs  int64                  `protobuf:"varint,16,opt,name=last_access_ts,json=lastAccessTs,proto3" json:"last_access_ts,omitempty"`
	Identity      string                 `protobuf:"bytes,17,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DavConfig) Reset() {
	*x = DavConfig{}
	mi := &file_webdav_public_webdav_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DavConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DavConfig) ProtoMessage() {}

func (x *DavConfig) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_public_webdav_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DavConfig.ProtoReflect.Descriptor instead.
func (*DavConfig) Descriptor() ([]byte, []int) {
	return file_webdav_public_webdav_proto_rawDescGZIP(), []int{0}
}

func (x *DavConfig) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

func (x *DavConfig) GetEnableFlag() int32 {
	if x != nil {
		return x.EnableFlag
	}
	return 0
}

func (x *DavConfig) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *DavConfig) GetWriteFlag() int32 {
	if x != nil {
		return x.WriteFlag
	}
	return 0
}

func (x *DavConfig) GetLockFlag() int32 {
	if x != nil {
		return x.LockFlag
	}
	return 0
}

func (x *DavConfig) GetChunkedFlag() int32 {
	if x != nil {
		return x.ChunkedFlag
	}
	return 0
}

func (x *DavConfig) GetPathStyle() int32 {
	if x != nil {
		return x.PathStyle
	}
	return 0
}

func (x *DavConfig) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DavConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DavConfig) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DavConfig) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DavConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DavConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DavConfig) GetUpdateTs() int64 {
	if x != nil {
		return x.UpdateTs
	}
	return 0
}

func (x *DavConfig) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DavConfig) GetLastAccessTs() int64 {
	if x != nil {
		return x.LastAccessTs
	}
	return 0
}

func (x *DavConfig) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type DavConfigListRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ListInfo      *common.ScanListRequest `protobuf:"bytes,1,opt,name=list_info,json=listInfo,proto3" json:"list_info,omitempty"`
	UserIdentity  string                  `protobuf:"bytes,2,opt,name=user_identity,json=userIdentity,proto3" json:"user_identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DavConfigListRequest) Reset() {
	*x = DavConfigListRequest{}
	mi := &file_webdav_public_webdav_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DavConfigListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DavConfigListRequest) ProtoMessage() {}

func (x *DavConfigListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_public_webdav_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DavConfigListRequest.ProtoReflect.Descriptor instead.
func (*DavConfigListRequest) Descriptor() ([]byte, []int) {
	return file_webdav_public_webdav_proto_rawDescGZIP(), []int{1}
}

func (x *DavConfigListRequest) GetListInfo() *common.ScanListRequest {
	if x != nil {
		return x.ListInfo
	}
	return nil
}

func (x *DavConfigListRequest) GetUserIdentity() string {
	if x != nil {
		return x.UserIdentity
	}
	return ""
}

type DavConfigListResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ListInfo      *common.ScanListRequest `protobuf:"bytes,1,opt,name=list_info,json=listInfo,proto3" json:"list_info,omitempty"`
	Configs       []*DavConfig            `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DavConfigListResponse) Reset() {
	*x = DavConfigListResponse{}
	mi := &file_webdav_public_webdav_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DavConfigListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DavConfigListResponse) ProtoMessage() {}

func (x *DavConfigListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_public_webdav_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DavConfigListResponse.ProtoReflect.Descriptor instead.
func (*DavConfigListResponse) Descriptor() ([]byte, []int) {
	return file_webdav_public_webdav_proto_rawDescGZIP(), []int{2}
}

func (x *DavConfigListResponse) GetListInfo() *common.ScanListRequest {
	if x != nil {
		return x.ListInfo
	}
	return nil
}

func (x *DavConfigListResponse) GetConfigs() []*DavConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type DavServerInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ServerName       string                 `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerVersion    string                 `protobuf:"bytes,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ServerSoftware   string                 `protobuf:"bytes,4,opt,name=server_software,json=serverSoftware,proto3" json:"server_software,omitempty"`
	ServerAddress    string                 `protobuf:"bytes,5,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	ServerPort       string                 `protobuf:"bytes,6,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	ServerProtocol   string                 `protobuf:"bytes,7,opt,name=server_protocol,json=serverProtocol,proto3" json:"server_protocol,omitempty"`
	ServerRoot       string                 `protobuf:"bytes,8,opt,name=server_root,json=serverRoot,proto3" json:"server_root,omitempty"`
	ServerSsl        bool                   `protobuf:"varint,9,opt,name=server_ssl,json=serverSsl,proto3" json:"server_ssl,omitempty"`
	ServerAllowWrite bool                   `protobuf:"varint,10,opt,name=server_allow_write,json=serverAllowWrite,proto3" json:"server_allow_write,omitempty"`
	MaxUsers         int64                  `protobuf:"varint,11,opt,name=max_users,json=maxUsers,proto3" json:"max_users,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DavServerInfo) Reset() {
	*x = DavServerInfo{}
	mi := &file_webdav_public_webdav_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DavServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DavServerInfo) ProtoMessage() {}

func (x *DavServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_webdav_public_webdav_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DavServerInfo.ProtoReflect.Descriptor instead.
func (*DavServerInfo) Descriptor() ([]byte, []int) {
	return file_webdav_public_webdav_proto_rawDescGZIP(), []int{3}
}

func (x *DavServerInfo) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *DavServerInfo) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *DavServerInfo) GetServerSoftware() string {
	if x != nil {
		return x.ServerSoftware
	}
	return ""
}

func (x *DavServerInfo) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

func (x *DavServerInfo) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *DavServerInfo) GetServerProtocol() string {
	if x != nil {
		return x.ServerProtocol
	}
	return ""
}

func (x *DavServerInfo) GetServerRoot() string {
	if x != nil {
		return x.ServerRoot
	}
	return ""
}

func (x *DavServerInfo) GetServerSsl() bool {
	if x != nil {
		return x.ServerSsl
	}
	return false
}

func (x *DavServerInfo) GetServerAllowWrite() bool {
	if x != nil {
		return x.ServerAllowWrite
	}
	return false
}

func (x *DavServerInfo) GetMaxUsers() int64 {
	if x != nil {
		return x.MaxUsers
	}
	return 0
}

var File_webdav_public_webdav_proto protoreflect.FileDescriptor

const file_webdav_public_webdav_proto_rawDesc = "" +
	"\n" +
	"\x1awebdav/public_webdav.proto\x12\x0fv6.services.pub\x1a\x17common/pub_common.proto\"\xf0\x03\n" +
	"\tDavConfig\x12#\n" +
	"\ruser_identity\x18\x01 \x01(\tR\fuserIdentity\x12\x1f\n" +
	"\venable_flag\x18\x02 \x01(\x05R\n" +
	"enableFlag\x12\x12\n" +
	"\x04root\x18\x03 \x01(\tR\x04root\x12\x1d\n" +
	"\n" +
	"write_flag\x18\x04 \x01(\x05R\twriteFlag\x12\x1b\n" +
	"\tlock_flag\x18\x05 \x01(\x05R\blockFlag\x12!\n" +
	"\fchunked_flag\x18\x06 \x01(\x05R\vchunkedFlag\x12\x1d\n" +
	"\n" +
	"path_style\x18\a \x01(\x05R\tpathStyle\x12\x16\n" +
	"\x06status\x18\b \x01(\x05R\x06status\x12\x16\n" +
	"\x06prefix\x18\t \x01(\tR\x06prefix\x12\x12\n" +
	"\x04code\x18\n" +
	" \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\v \x01(\tR\amessage\x12\x1a\n" +
	"\busername\x18\f \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\r \x01(\tR\bpassword\x12\x1b\n" +
	"\tupdate_ts\x18\x0e \x01(\x03R\bupdateTs\x12\x16\n" +
	"\x06remark\x18\x0f \x01(\tR\x06remark\x12$\n" +
	"\x0elast_access_ts\x18\x10 \x01(\x03R\flastAccessTs\x12\x1a\n" +
	"\bidentity\x18\x11 \x01(\tR\bidentity\"\x81\x01\n" +
	"\x14DavConfigListRequest\x12D\n" +
	"\tlist_info\x18\x01 \x01(\v2'.v6.services.pub.common.ScanListRequestR\blistInfo\x12#\n" +
	"\ruser_identity\x18\x02 \x01(\tR\fuserIdentity\"\x93\x01\n" +
	"\x15DavConfigListResponse\x12D\n" +
	"\tlist_info\x18\x01 \x01(\v2'.v6.services.pub.common.ScanListRequestR\blistInfo\x124\n" +
	"\aconfigs\x18\x02 \x03(\v2\x1a.v6.services.pub.DavConfigR\aconfigs\"\xfc\x02\n" +
	"\rDavServerInfo\x12\x1f\n" +
	"\vserver_name\x18\x01 \x01(\tR\n" +
	"serverName\x12%\n" +
	"\x0eserver_version\x18\x02 \x01(\tR\rserverVersion\x12'\n" +
	"\x0fserver_software\x18\x04 \x01(\tR\x0eserverSoftware\x12%\n" +
	"\x0eserver_address\x18\x05 \x01(\tR\rserverAddress\x12\x1f\n" +
	"\vserver_port\x18\x06 \x01(\tR\n" +
	"serverPort\x12'\n" +
	"\x0fserver_protocol\x18\a \x01(\tR\x0eserverProtocol\x12\x1f\n" +
	"\vserver_root\x18\b \x01(\tR\n" +
	"serverRoot\x12\x1d\n" +
	"\n" +
	"server_ssl\x18\t \x01(\bR\tserverSsl\x12,\n" +
	"\x12server_allow_write\x18\n" +
	" \x01(\bR\x10serverAllowWrite\x12\x1b\n" +
	"\tmax_users\x18\v \x01(\x03R\bmaxUsers2\xfe\x05\n" +
	"\fPubDavConfig\x12?\n" +
	"\x03Get\x12\x1a.v6.services.pub.DavConfig\x1a\x1a.v6.services.pub.DavConfig\"\x00\x12B\n" +
	"\x06Update\x12\x1a.v6.services.pub.DavConfig\x1a\x1a.v6.services.pub.DavConfig\"\x00\x12B\n" +
	"\x06Enable\x12\x1a.v6.services.pub.DavConfig\x1a\x1a.v6.services.pub.DavConfig\"\x00\x12C\n" +
	"\aDisable\x12\x1a.v6.services.pub.DavConfig\x1a\x1a.v6.services.pub.DavConfig\"\x00\x12O\n" +
	"\aListAll\x12\x1a.v6.services.pub.DavConfig\x1a&.v6.services.pub.DavConfigListResponse\"\x00\x12W\n" +
	"\x04List\x12%.v6.services.pub.DavConfigListRequest\x1a&.v6.services.pub.DavConfigListResponse\"\x00\x12b\n" +
	"\x10ValidateUserName\x12\x1a.v6.services.pub.DavConfig\x1a0.v6.services.pub.common.UserNameValidateResponse\"\x00\x12J\n" +
	"\n" +
	"ServerInfo\x12\x1a.v6.services.pub.DavConfig\x1a\x1e.v6.services.pub.DavServerInfo\"\x00\x12B\n" +
	"\x06Create\x12\x1a.v6.services.pub.DavConfig\x1a\x1a.v6.services.pub.DavConfig\"\x00\x12B\n" +
	"\x06Delete\x12\x1a.v6.services.pub.DavConfig\x1a\x1a.v6.services.pub.DavConfig\"\x00B;Z9github.com/city404/v6-public-rpc-proto/go/v6/webdavconfigb\x06proto3"

var (
	file_webdav_public_webdav_proto_rawDescOnce sync.Once
	file_webdav_public_webdav_proto_rawDescData []byte
)

func file_webdav_public_webdav_proto_rawDescGZIP() []byte {
	file_webdav_public_webdav_proto_rawDescOnce.Do(func() {
		file_webdav_public_webdav_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_webdav_public_webdav_proto_rawDesc), len(file_webdav_public_webdav_proto_rawDesc)))
	})
	return file_webdav_public_webdav_proto_rawDescData
}

var file_webdav_public_webdav_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_webdav_public_webdav_proto_goTypes = []any{
	(*DavConfig)(nil),                       // 0: v6.services.pub.DavConfig
	(*DavConfigListRequest)(nil),            // 1: v6.services.pub.DavConfigListRequest
	(*DavConfigListResponse)(nil),           // 2: v6.services.pub.DavConfigListResponse
	(*DavServerInfo)(nil),                   // 3: v6.services.pub.DavServerInfo
	(*common.ScanListRequest)(nil),          // 4: v6.services.pub.common.ScanListRequest
	(*common.UserNameValidateResponse)(nil), // 5: v6.services.pub.common.UserNameValidateResponse
}
var file_webdav_public_webdav_proto_depIdxs = []int32{
	4,  // 0: v6.services.pub.DavConfigListRequest.list_info:type_name -> v6.services.pub.common.ScanListRequest
	4,  // 1: v6.services.pub.DavConfigListResponse.list_info:type_name -> v6.services.pub.common.ScanListRequest
	0,  // 2: v6.services.pub.DavConfigListResponse.configs:type_name -> v6.services.pub.DavConfig
	0,  // 3: v6.services.pub.PubDavConfig.Get:input_type -> v6.services.pub.DavConfig
	0,  // 4: v6.services.pub.PubDavConfig.Update:input_type -> v6.services.pub.DavConfig
	0,  // 5: v6.services.pub.PubDavConfig.Enable:input_type -> v6.services.pub.DavConfig
	0,  // 6: v6.services.pub.PubDavConfig.Disable:input_type -> v6.services.pub.DavConfig
	0,  // 7: v6.services.pub.PubDavConfig.ListAll:input_type -> v6.services.pub.DavConfig
	1,  // 8: v6.services.pub.PubDavConfig.List:input_type -> v6.services.pub.DavConfigListRequest
	0,  // 9: v6.services.pub.PubDavConfig.ValidateUserName:input_type -> v6.services.pub.DavConfig
	0,  // 10: v6.services.pub.PubDavConfig.ServerInfo:input_type -> v6.services.pub.DavConfig
	0,  // 11: v6.services.pub.PubDavConfig.Create:input_type -> v6.services.pub.DavConfig
	0,  // 12: v6.services.pub.PubDavConfig.Delete:input_type -> v6.services.pub.DavConfig
	0,  // 13: v6.services.pub.PubDavConfig.Get:output_type -> v6.services.pub.DavConfig
	0,  // 14: v6.services.pub.PubDavConfig.Update:output_type -> v6.services.pub.DavConfig
	0,  // 15: v6.services.pub.PubDavConfig.Enable:output_type -> v6.services.pub.DavConfig
	0,  // 16: v6.services.pub.PubDavConfig.Disable:output_type -> v6.services.pub.DavConfig
	2,  // 17: v6.services.pub.PubDavConfig.ListAll:output_type -> v6.services.pub.DavConfigListResponse
	2,  // 18: v6.services.pub.PubDavConfig.List:output_type -> v6.services.pub.DavConfigListResponse
	5,  // 19: v6.services.pub.PubDavConfig.ValidateUserName:output_type -> v6.services.pub.common.UserNameValidateResponse
	3,  // 20: v6.services.pub.PubDavConfig.ServerInfo:output_type -> v6.services.pub.DavServerInfo
	0,  // 21: v6.services.pub.PubDavConfig.Create:output_type -> v6.services.pub.DavConfig
	0,  // 22: v6.services.pub.PubDavConfig.Delete:output_type -> v6.services.pub.DavConfig
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_webdav_public_webdav_proto_init() }
func file_webdav_public_webdav_proto_init() {
	if File_webdav_public_webdav_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_webdav_public_webdav_proto_rawDesc), len(file_webdav_public_webdav_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webdav_public_webdav_proto_goTypes,
		DependencyIndexes: file_webdav_public_webdav_proto_depIdxs,
		MessageInfos:      file_webdav_public_webdav_proto_msgTypes,
	}.Build()
	File_webdav_public_webdav_proto = out.File
	file_webdav_public_webdav_proto_goTypes = nil
	file_webdav_public_webdav_proto_depIdxs = nil
}
