// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: oauth/oauth.proto

package oauth

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorizeRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ClientId            string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`                                    // Client ID
	ResponseType        string                 `protobuf:"bytes,2,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`                        // Response type, e.g., "code"
	RedirectUri         string                 `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`                           // Redirect URI
	Scope               string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`                                                          // Scopes requested
	State               string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`                                                          // State parameter for CSRF protection
	CodeChallenge       string                 `protobuf:"bytes,6,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`                     // Code challenge for PKCE
	CodeChallengeMethod string                 `protobuf:"bytes,7,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"` // Method for code challenge, e.g., "S256"
	Version             string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`                                                      // Version of the OAuth protocol, e.g., "2.0"
	Nonce               string                 `protobuf:"bytes,9,opt,name=nonce,proto3" json:"nonce,omitempty"`                                                          // Nonce for additional security, used in OpenID Connect
	Device              string                 `protobuf:"bytes,10,opt,name=device,proto3" json:"device,omitempty"`                                                       // Device information, used for device authorization
	Mode                string                 `protobuf:"bytes,11,opt,name=mode,proto3" json:"mode,omitempty"`                                                           // Country code for the user
	DebugHost           string                 `protobuf:"bytes,12,opt,name=debug_host,json=debugHost,proto3" json:"debug_host,omitempty"`                                // Debug host for testing purposes
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	mi := &file_oauth_oauth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oauth_oauth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_oauth_oauth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthorizeRequest) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

func (x *AuthorizeRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthorizeRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthorizeRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthorizeRequest) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *AuthorizeRequest) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *AuthorizeRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AuthorizeRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *AuthorizeRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AuthorizeRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *AuthorizeRequest) GetDebugHost() string {
	if x != nil {
		return x.DebugHost
	}
	return ""
}

type AuthorizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                  // Authorization code
	RedirectUri   string                 `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"` // Redirect URI to send the user back to
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`                                // State parameter to match the request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	mi := &file_oauth_oauth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oauth_oauth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_oauth_oauth_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorizeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthorizeResponse) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthorizeResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type AuthorizeState struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Code                string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	State               string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`                                // State parameter for CSRF protection
	Status              string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                              // Status of the authorization request
	RedirectUri         string                 `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"` // Redirect URI
	Scope               string                 `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	ResponseType        string                 `protobuf:"bytes,6,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	Version             string                 `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	CodeChallenge       string                 `protobuf:"bytes,8,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`                     // Code challenge for PKCE
	CodeChallengeMethod string                 `protobuf:"bytes,9,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"` // Method for code challenge, e.g., "S256"
	ClientId            string                 `protobuf:"bytes,10,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Device              string                 `protobuf:"bytes,11,opt,name=device,proto3" json:"device,omitempty"` // Device information, used for device authorization
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AuthorizeState) Reset() {
	*x = AuthorizeState{}
	mi := &file_oauth_oauth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeState) ProtoMessage() {}

func (x *AuthorizeState) ProtoReflect() protoreflect.Message {
	mi := &file_oauth_oauth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeState.ProtoReflect.Descriptor instead.
func (*AuthorizeState) Descriptor() ([]byte, []int) {
	return file_oauth_oauth_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorizeState) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthorizeState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthorizeState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AuthorizeState) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthorizeState) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthorizeState) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

func (x *AuthorizeState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AuthorizeState) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *AuthorizeState) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *AuthorizeState) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthorizeState) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

var File_oauth_oauth_proto protoreflect.FileDescriptor

const file_oauth_oauth_proto_rawDesc = "" +
	"\n" +
	"\x11oauth/oauth.proto\x12\x11v6.services.oauth\x1a\x1cgoogle/api/annotations.proto\"\xf9\x02\n" +
	"\x10AuthorizeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rresponse_type\x18\x02 \x01(\tR\fresponseType\x12!\n" +
	"\fredirect_uri\x18\x03 \x01(\tR\vredirectUri\x12\x14\n" +
	"\x05scope\x18\x04 \x01(\tR\x05scope\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12%\n" +
	"\x0ecode_challenge\x18\x06 \x01(\tR\rcodeChallenge\x122\n" +
	"\x15code_challenge_method\x18\a \x01(\tR\x13codeChallengeMethod\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x12\x14\n" +
	"\x05nonce\x18\t \x01(\tR\x05nonce\x12\x16\n" +
	"\x06device\x18\n" +
	" \x01(\tR\x06device\x12\x12\n" +
	"\x04mode\x18\v \x01(\tR\x04mode\x12\x1d\n" +
	"\n" +
	"debug_host\x18\f \x01(\tR\tdebugHost\"`\n" +
	"\x11AuthorizeResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12!\n" +
	"\fredirect_uri\x18\x02 \x01(\tR\vredirectUri\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\"\xda\x02\n" +
	"\x0eAuthorizeState\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12!\n" +
	"\fredirect_uri\x18\x04 \x01(\tR\vredirectUri\x12\x14\n" +
	"\x05scope\x18\x05 \x01(\tR\x05scope\x12#\n" +
	"\rresponse_type\x18\x06 \x01(\tR\fresponseType\x12\x18\n" +
	"\aversion\x18\a \x01(\tR\aversion\x12%\n" +
	"\x0ecode_challenge\x18\b \x01(\tR\rcodeChallenge\x122\n" +
	"\x15code_challenge_method\x18\t \x01(\tR\x13codeChallengeMethod\x12\x1b\n" +
	"\tclient_id\x18\n" +
	" \x01(\tR\bclientId\x12\x16\n" +
	"\x06device\x18\v \x01(\tR\x06device2\x95\x02\n" +
	"\x12OauthAuthorization\x12v\n" +
	"\tAuthorize\x12#.v6.services.oauth.AuthorizeRequest\x1a$.v6.services.oauth.AuthorizeResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v6/oauth/authorize\x12\x86\x01\n" +
	"\x11GetAuthorizeState\x12!.v6.services.oauth.AuthorizeState\x1a$.v6.services.oauth.AuthorizeResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v6/oauth/get_authorize_stateB4Z2github.com/city404/v6-public-rpc-proto/go/v6/oauthb\x06proto3"

var (
	file_oauth_oauth_proto_rawDescOnce sync.Once
	file_oauth_oauth_proto_rawDescData []byte
)

func file_oauth_oauth_proto_rawDescGZIP() []byte {
	file_oauth_oauth_proto_rawDescOnce.Do(func() {
		file_oauth_oauth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_oauth_oauth_proto_rawDesc), len(file_oauth_oauth_proto_rawDesc)))
	})
	return file_oauth_oauth_proto_rawDescData
}

var file_oauth_oauth_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_oauth_oauth_proto_goTypes = []any{
	(*AuthorizeRequest)(nil),  // 0: v6.services.oauth.AuthorizeRequest
	(*AuthorizeResponse)(nil), // 1: v6.services.oauth.AuthorizeResponse
	(*AuthorizeState)(nil),    // 2: v6.services.oauth.AuthorizeState
}
var file_oauth_oauth_proto_depIdxs = []int32{
	0, // 0: v6.services.oauth.OauthAuthorization.Authorize:input_type -> v6.services.oauth.AuthorizeRequest
	2, // 1: v6.services.oauth.OauthAuthorization.GetAuthorizeState:input_type -> v6.services.oauth.AuthorizeState
	1, // 2: v6.services.oauth.OauthAuthorization.Authorize:output_type -> v6.services.oauth.AuthorizeResponse
	1, // 3: v6.services.oauth.OauthAuthorization.GetAuthorizeState:output_type -> v6.services.oauth.AuthorizeResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_oauth_oauth_proto_init() }
func file_oauth_oauth_proto_init() {
	if File_oauth_oauth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_oauth_oauth_proto_rawDesc), len(file_oauth_oauth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oauth_oauth_proto_goTypes,
		DependencyIndexes: file_oauth_oauth_proto_depIdxs,
		MessageInfos:      file_oauth_oauth_proto_msgTypes,
	}.Build()
	File_oauth_oauth_proto = out.File
	file_oauth_oauth_proto_goTypes = nil
	file_oauth_oauth_proto_depIdxs = nil
}
