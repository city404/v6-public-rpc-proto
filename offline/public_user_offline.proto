syntax = "proto3";
package v6.services.pub;
option go_package = "github.com/city404/v6-public-rpc-proto/go/v6/offline";
import "common/pub_common.proto";

service PubOfflineTask {
    rpc Parse (TaskParseRequest) returns (TaskParseResponse) {}
    rpc Add (UserTask) returns (UserTask) {}
    rpc List (OfflineTaskListRequest) returns (OfflineTaskListResponse) {}
    rpc Delete (OfflineTaskDeleteRequest) returns (OfflineTaskDeleteResponse) {}
}

message TaskParseRequest {
    string url = 1;
    string file = 2;
    string identity = 3;
}

message TaskMeta {
    string identity = 1; // identity
    int32 type = 2; 
    int32 status = 3; 
    bool locked = 4;
    int64 update_ts = 5;
    string file = 6;
    int64 create_ts = 7;
    string url = 8;
    uint64 size = 9;
    string name = 10;
    // string lock_by = 11;
    int32 code = 12;
    string message = 13;
    string addon = 14;
    uint64 retries = 15;
    uint64 progress = 16;
    uint64 bytes_total = 17;
    uint64 bytes_processed = 18;
    int32 flag = 19;
    // int32 retry_status = 20;
}

message TaskFile {
    string identity = 1; // identity
    // string file_identity = 2;
    // string task_identity = 3;
    string path = 4;
    int32 status = 5; 
    int64 update_ts = 6;
    int64 create_ts = 7;
    string name = 8;
    uint64 size = 9;
    // string content_identity = 10;
    // int32 code = 11;
    // string message = 12;
    uint64 bytes_total = 13;
    // uint64 bytes_processed = 14;
    int32 index = 15;
    bool directory = 16;
}



message TaskParseResponse {
    TaskMeta meta = 1;
    repeated TaskFile task_files = 2;
}


message OfflineTaskListRequest {
    .v6.services.pub.common.ScanListRequest list_info = 3;
}

message OfflineTaskListResponse {
    repeated UserTask tasks = 1;
    .v6.services.pub.common.ScanListRequest list_info = 2;
}

message OfflineTaskDeleteRequest {
    repeated string identity = 1;
    bool delete_files = 2;
}

message OfflineTaskDeleteResponse {
    int64 count = 1;
}

message UserTask {
    string identity = 1; // identity
    int32 type = 2; 
    int32 status = 3; 
    // string user_identity = 4;
    int64 update_ts = 5;
    string file = 6;
    int64 create_ts = 7;
    string url = 8;
    uint64 size = 9;
    string name = 10;
    string task_identity = 11;
    int32 code = 12;
    string message = 13;
    string addon = 14;
    uint64 progress = 16;
    uint64 bytes_total = 17;
    uint64 bytes_processed = 18;
    int32 flag = 19;
    string save_path = 20;
    repeated string callbacks = 21;
    repeated string ignore_files = 22;
}