syntax = "proto3";
package v6.services.pub;
option go_package = "github.com/city404/v6-public-rpc-proto/go/v6/userfile";
import "common/pub_common.proto";

service PubUserFile {
    rpc Create (File) returns (File) {}
    rpc Get (File) returns (File) {}
    //rpc Update (File) returns (File) {}
    rpc Rename (File) returns (BatchOperationResponse) {}
    rpc Trash (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc Move (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc Copy (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc Delete (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc DeleteTrash (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc Recover (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc BatchOperation (BatchOperationRequest) returns (BatchOperationResponse) {}
    rpc List (FileListRequest) returns (FileListResponse) {}
    rpc ListTrash (FileListRequest) returns (FileListResponse) {}
    rpc Search (SearchRequest) returns (FileListResponse) {}
    rpc CreateManageRTCOffer (ManageRTCRequest) returns (ManageRTCResponse) {}
    rpc SendClientIceCandidate (SendIceCandidateRequest) returns (SendIceCandidateResponse) {}
    rpc GetServerIceCandidate (GetIceCandidateRequest) returns (GetIceCandidateResponse) {}
    rpc ParseFileSlice (File) returns (ParseFileSliceResponse) {}
    rpc GetSliceDownloadAddress (SliceDownloadAddressRequest) returns (SliceDownloadAddressResponse) {}
    rpc GetDownloadAndPreviewInfo (File) returns (DownloadAndPreviewInfo) {}
    rpc PreviewDoc (File) returns (DocFilePreview) {}
    rpc CreateDoc (File) returns (DocFilePreview) {}
    rpc CreateUploadToken (File) returns (UploadToken) {}
    // rpc CreateDownloadAnswer (RTCDownloadInfo) returns (RTCDownloadInfo) {}
}

message File {
    string identity = 1;
    string parent = 3;
    string name = 4;
    string path = 5;
    string mime_type = 6;
    int64 size = 7;
    int64 type = 8;
    int64 create_ts = 9;
    int64 update_ts = 10;
    int64 delete_ts = 11;
    bool deleted = 12;
    bool dir = 13;
    bool hidden = 14;
    bool locked = 15;
    bool shared = 16;
    bool starred = 17;
    bool trashed = 18;
    int64 locked_at = 19;
    string locked_by = 20;
    int64 shared_at = 21;
    int64 flag = 22;
    string unique = 23;
    string content_identity = 24;
    int64 label = 25;
    int64 store_type = 26;
    int64 version = 27;
}

message FileListRequest {
    File parent = 1;
    File filter = 2;
    .v6.services.pub.common.ScanListRequest list_info = 3;
}

message SearchRequest {
    string name = 1;
    .v6.services.pub.common.ScanListRequest list_info = 3;
}

message FileListResponse {
    repeated File files = 1;
    .v6.services.pub.common.ScanListRequest list_info = 2;
}

message BatchOperationRequest {
    repeated File source = 1;
    File dest = 2;
    int32 operation = 3;
    int32 flag = 4;
}

message BatchOperationResponse {
    string task  = 1;
    int32 status = 2;
    int64 affected  = 3;
    int64 create_ts = 4;
    int64 progress = 5;
}

message ManageRTCRequest {
    // string content_identity = 1;
    string sdp = 1;
    string offer = 2;
    string client_identity = 3;
}

message ManageRTCResponse {
    // string content_identity = 1;
    int64 file_size = 1;
    string encode_key = 2;
    string sdp = 3;
    string name = 4;
    string connection = 5;
}

message SendIceCandidateRequest {
    // string content_identity = 1;
    string client_identity = 1;
    string candidate = 2;
}

message SendIceCandidateResponse {
    // string content_identity = 1;
    string client_identity = 1;
    string candidate = 2;
}

message GetIceCandidateRequest {
    // string content_identity = 1;
    string client_identity = 1;
    string candidate = 2;
}

message GetIceCandidateResponse {
    // string content_identity = 1;
    string client_identity = 1;
    repeated string candidate = 2;
}


//message ParseFileSliceRequest {
//    string content_identity = 1;
//    // string client_identity = 2;
//}

message ParseFileSliceResponse {
    string content_identity = 1;
    repeated string meta_nodes = 2;
    repeated string raw_nodes = 3;
    int64 file_size = 4;
    repeated SliceSize sizes = 5;
    string sha1 = 6;
    string wcs_etag = 7;
    string name = 8;
    string path = 9;
}

message SliceSize {
    int64 start_index = 1;
    int64 end_index = 2;
    int64 size = 3;
}


message SliceDownloadAddressRequest {
    repeated string identity = 1;
    int32 version = 2;
}

message SliceDownloadAddressResponse {
    repeated SliceDownloadInfo addresses = 1;
    int64 expire_at = 2;
    string request_address = 3;
    int32 version = 4;
}

message SliceDownloadInfo {
    string identity = 1;
    string download_address = 2;
    string download_token = 3;
    int32 encrypt = 4;
}

message DocFilePreview {
    string identity = 1;
    string parent = 3;
    string name = 4;
    string path = 5;
    string mime_type = 6;
    int64 size = 7;
    int64 type = 8;
    bool can_preview = 9;
    string preview_address = 10;
    string preview_token = 11;
    bool can_edit = 12;
    string edit_address = 13;
    string edit_token = 14;
}

message DownloadAndPreviewInfo {
    string identity = 1;
    string parent = 3;
    string name = 4;
    string path = 5;
    string mime_type = 6;
    int64 size = 7;
    int64 type = 8;
    bool can_preview = 9;
    bool can_edit = 10;
    int32 preview_type = 11;
    int32 download_type = 12;
    string sha1 = 13;
    bool can_download = 14;
    string cannot_download_message = 15;
    string content_identity = 16;
}

message UploadToken {
    string token = 1;
    string access_key = 10;
    string secret_key = 11;
    string bucket = 12;
    string region = 13;
    string endpoint = 14;
    string key = 15;
}